swagger: '2.0'
info:
  title: Deploy Info 
  description: DEPLOY INFO API
  version: "1.0.0"
host: tbd
consumes:
  - application/json
produces:
  - application/json
basePath: /v1
paths:
  /prs/:
    get:
      summary: Get a list of all PRs 
      description: Returns a list of all PRs.
      tags:
        - PRs
      operationId: getAllPRs
      responses:
        200:
          description: The result is an array of PRs
          schema: 
            $ref: "#/definitions/PRListModel"
  /prs/{pr_id}:
    get:
      summary: Get a single PR
      description: Returns a single PR based on a PR ID
      operationId: findPRbyID
      tags:
        - PRs
      parameters:
        - name: pr_id
          required: true
          in: path
          description: ID of PR to fetch
          type: integer
      responses:
        200:
          description: PR response
          schema: 
            $ref: "#/definitions/PRModel"
        404:
          description: PR not found.
  /prs/list:
    get:
      summary: Get a list of PRs by date
      description: Returns a list of PRs 
      operationId: findPRsbyDate
      tags:
        - PRs
      parameters:
        - name: start
          required: false
          in: query
          description: Start date for list of PRs, inclusive
          type: string 
        - name: end
          required: false
          in: query
          description: End date for list of PRs, exclusive
          type: string
      responses:
        200:
          description: An array of PRs for given date range
          schema: 
            $ref: "#/definitions/PRListModel"
  /crs/:
    get:
      summary: Get a list of all CRs 
      description: Returns a list of all CRs.
      tags:
        - CRs
      operationId: getAllCRs
      responses:
        200:
          description: The result is an array of CRs
          schema: 
            $ref: "#/definitions/CRListModel"
  /crs/{cr_id}:
    get:
      summary: Get a single CR
      description: Returns a single CR based on a CR ID
      operationId: findCRbyID
      tags:
        - CRs
      parameters:
        - name: cr_id
          required: true
          in: path
          description: ID of CR to fetch
          type: integer
      responses:
        200:
          description: CR response
          schema: 
            $ref: "#/definitions/CRModel"
        404:
          description: CR not found.
  /crs/list:
    get:
      summary: Get a list of CRs by date
      description: Returns a list of CRs 
      operationId: findCRsbyDate
      tags:
        - CRs
      parameters:
        - name: start
          required: false
          in: query
          description: Start date for list of CRs, inclusive
          type: string 
        - name: end
          required: false
          in: query
          description: End date for list of CRs, exclusive
          type: string
      responses:
        200:
          description: An array of CRs for given date range
          schema: 
            $ref: "#/definitions/CRListModel"
  /tickets/:
    get:
      summary: Get a list of all tickets 
      description: Returns a list of all tickets.
      tags:
        - tickets
      operationId: getAllTickets
      responses:
        200:
          description: The result is an array of tickets
          schema: 
            $ref: "#/definitions/TicketListModel"
  /tickets/{ticket_id}:
    get:
      summary: Get a single ticket
      description: Returns a single ticket based on a ticket ID
      operationId: findTicketbyID
      tags:
        - tickets
      parameters:
        - name: ticket_id
          required: true
          in: path
          description: ID of ticket to fetch
          type: integer
      responses:
        200:
          description: Ticket response
          schema: 
            $ref: "#/definitions/TicketModel"
        404:
          description: ticket not found.
  /tickets/list:
    get:
      summary: Get a list of tickets by date
      description: Returns a list of tickets 
      operationId: findTicketsbyDate
      tags:
        - tickets
      parameters:
        - name: start
          required: false
          in: query
          description: Start date for list of tickets, inclusive
          type: string 
        - name: end
          required: false
          in: query
          description: End date for list of tickets, exclusive
          type: string
      responses:
        200:
          description: An array of tickets for given date range
          schema: 
            $ref: "#/definitions/TicketListModel"
  /zabbix/:
    get:
      summary: Get a list of all zabbix errors 
      description: Returns a list of all zabbix errors.
      tags:
        - zabbix
      operationId: getAllZabbixErrors
      responses:
        200:
          description: The result is an array of zabbix errors
          schema: 
            $ref: "#/definitions/ZabbixListModel"
  /zabbix/{zabbix_id}:
    get:
      summary: Get a single zabbix error
      description: Returns a single zabbix error based on a ticket ID
      operationId: findZabbixbyID
      tags:
        - zabbix
      parameters:
        - name: zabbix_id
          required: true
          in: path
          description: ID of zabbix error to fetch
          type: integer
      responses:
        200:
          description: Zabbix error response
          schema: 
            $ref: "#/definitions/ZabbixModel"
        404:
          description: Zabbix error not found.
  /zabbix/list:
    get:
      summary: Get a list of zabbix errors by date
      description: Returns a list of zabbix errors 
      operationId: findZabbixbyDate
      tags:
        - zabbix
      parameters:
        - name: start
          required: false
          in: query
          description: Start date for list of zabbix errors, inclusive
          type: string 
        - name: end
          required: false
          in: query
          description: End date for list of zabbix errors, exclusive
          type: string
      responses:
        200:
          description: An array of zabbix errors for given date range
          schema: 
            $ref: "#/definitions/ZabbixListModel"
  /deploys/:
    get:
      summary: Get a list of all deploys
      description: Returns a list of all deploys.
      tags:
        - deploys
      responses:
        200:
          description: The result is an array of deploys
          schema:
            $ref: "#/definitions/DeployListModel"
  /deploys/list:
    get:
      summary: Get a list of deploys by date
      description: Returns a list of deploys
      operationId: findDeploysbyDate
      tags:
        - deploys
      parameters:
        - name: start
          required: false
          in: query
          description: Start date for list of deploys, inclusive
          type: string
        - name: end
          required: false
          in: query
          description: End date for list of deploys, exclusive
          type: string
      responses:
        200:
          description: An array of deploys for given date range
          schema:
            $ref: "#/definitions/DeployListModel"
  /deploys/{repo}:
    get:
      summary: Get a list of all deploys for a repo
      description: Returns an array of deploys for a single repo
      operationId: findDeploysByRepo
      tags:
        - deploys
        - repo
      parameters:
        - name: repo
          required: true
          in: path
          description: Repo name for list of deploys
          type: string
      responses:
        200:
          description: deploy response
          schema:
            $ref: "#/definitions/DeployListModel"
        404:
          description: Repo not found.
  /deploys/{repo}/{version}:
    get:
      summary: Get a single deploy with this version number
      description: Returns a single deploy
      operationId: findDeploysByVersion
      tags:
        - deploys
        - version
      parameters:
        - name: repo
          required: true
          in: path
          description: Repo name for deploy
          type: string
        - name: version
          required: true
          in: path
          description: Version of deploy
          type: string
      responses:
        200:
          description: deploy response
          schema:
            $ref: "#/definitions/DeployModel"
        404:
          description: Version not found.
  /deploys/{repo}/list:
    get:
      summary: Get a list of all deploys for a repo for a given date range
      description: Returns an array of deploys for a single repo and date range
      operationId: findDeploysByRepoAndDate
      tags:
        - deploys
        - repo
      parameters:
        - name: repo
          required: true
          in: path
          description: Repo name for list of deploys
          type: string
        - name: start
          required: false
          in: query
          description: Start date for list of deploys, inclusive
          type: string
        - name: end
          required: false
          in: query
          description: End date for list of deploys, exclusive
          type: string
      responses:
        200:
          description: deploy response
          schema:
            $ref: "#/definitions/DeployListModel"
        404:
          description: Repo not found.
definitions:
  PRListModel:
    type: object
    properties:
      count:
        type: integer
      pr_list:
        type: array
        items:
          $ref: "#/definitions/PRModel"
  PRModel:
    type: object
    required:
      - pr_id
    properties:
      pr_id: 
        type: integer
      pr_title: 
        type: string
      pr_desc:
        type: string
      pr_date:
        type: string
      pr_author:
        type: string
  CRListModel:
    type: object
    properties:
      count:
        type: integer
      cr_list:
        type: array
        items:
          $ref: "#/definitions/CRModel"
  CRModel:
    type: object
    required:
      - cr_id
    properties:
      cr_id: 
        type: integer
      cr_title: 
        type: string
      cr_desc:
        type: string
      cr_date:
        type: string
      cr_author:
        type: string
  TicketListModel:
    type: object
    properties:
      count:
        type: integer
      ticket_list:
        type: array
        items:
          $ref: "#/definitions/TicketModel"
  TicketModel:
    type: object
    required:
      - ticket_id
    properties:
      ticket_id: 
        type: integer
      ticket_desc:
        type: string
      ticket_date:
        type: string
  ZabbixListModel:
    type: object
    properties:
      count:
        type: integer
      zabbix_list:
        type: array
        items:
          $ref: "#/definitions/ZabbixModel"
  ZabbixModel:
    type: object
    required:
      - zabbix_id
    properties:
      zabbix_id: 
        type: integer
      zabbix_desc:
        type: string
      zabbix_date:
        type: string
  DeployListModel:
    type: object
    properties:
      count:
        type: integer
      deploy_list:
        type: array
        items:
          $ref: "#/definitions/DeployModel"
  DeployModel:
    type: object
    required:
      - version
      - repo
    properties:
      version: 
        type: string
      repo:
        type: string
      release_date:
        type: string
      prs:
        $ref: "#/definitions/PRListModel"
      

